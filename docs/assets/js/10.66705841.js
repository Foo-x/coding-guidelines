(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{343:function(t,a,s){"use strict";s.r(a);var r=s(46),e=Object(r.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"インターフェース分離の原則"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#インターフェース分離の原則","aria-hidden":"true"}},[t._v("#")]),t._v(" インターフェース分離の原則")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("ISP (Interface Segregation Principle)")]),s("br"),t._v("\nクライアントに、クライアントが利用しないメソッドへの依存を強制させてはいけない")])]),t._v(" "),s("p",[t._v("あるインターフェースを作成するときは利用者ごとにインターフェースを分離しましょう。複数の利用者が同じインターフェースに依存してしまうと、インターフェースを修正したときの影響範囲が広くなってしまいます。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[s("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"✏️",src:"https://twemoji.maxcdn.com/2/svg/270f.svg"}}),t._v(" "),s("strong",[t._v("インターフェースは利用者ごとに分離する")])])]),t._v(" "),s("h2",{attrs:{id:"関連"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#関連","aria-hidden":"true"}},[t._v("#")]),t._v(" 関連")]),t._v(" "),s("h3",{attrs:{id:"単一責任原則"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#単一責任原則","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("router-link",{attrs:{to:"/architecture/SRP.html"}},[t._v("単一責任原則")])],1),t._v(" "),s("p",[t._v("修正に対する影響範囲を狭くするという目的も、利用者ごとに分離するという手段も同じです。")])])},[],!1,null,null,null);a.default=e.exports}}]);