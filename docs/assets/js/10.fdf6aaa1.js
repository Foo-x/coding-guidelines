(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{188:function(t,s,i){"use strict";i.r(s);var e=i(0),l=Object(e.a)({},function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"リスコフの置換原則"}},[t._v("リスコフの置換原則")]),t._v(" "),t._m(0),t._v(" "),i("p",[t._v("子クラスは親クラスの性質を引き継がなければいけません。例えば子クラスで以下のような実装を行ってはいけません。")]),t._v(" "),t._m(1),t._v(" "),i("p",[t._v("LSPに違反したクラスが存在すると、そのクラスを利用する側で以下のような問題が発生します。")]),t._v(" "),i("ul",[i("li",[t._v("どの子クラスを使うか気にしなければいけない")]),t._v(" "),i("li",[t._v("子クラスの実装を知らなければいけない")]),t._v(" "),i("li",[t._v("その子クラスに強く結合する\n"),i("ul",[i("li",[i("router-link",{attrs:{to:"./OCP.html"}},[t._v("OCP (Open-Closed Principle)")]),t._v("にも同時に違反する")],1)])])]),t._v(" "),t._m(2)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("LSP (Liskov Substitution Principle)")]),s("br"),this._v("\n派生型はその基底型と置換可能でなければならない")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("親クラスで定義しているフィールドを使用していない")]),this._v(" "),s("li",[this._v("親クラスのメソッドを全く別の処理に書き換えている")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("NOTE")]),this._v(" "),s("p",[s("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"✏️",src:"https://twemoji.maxcdn.com/2/svg/270f.svg"}}),this._v(" "),s("strong",[this._v("子クラスは親クラスの性質を引き継ぐ")])])])}],!1,null,null,null);l.options.__file="LSP.md";s.default=l.exports}}]);