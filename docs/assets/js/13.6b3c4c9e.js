(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{472:function(t,s,l){"use strict";l.r(s);var i=l(57),e=Object(i.a)({},(function(){var t=this,s=t.$createElement,l=t._self._c||s;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"リスコフの置換原則"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#リスコフの置換原則"}},[t._v("#")]),t._v(" リスコフの置換原則")]),t._v(" "),l("blockquote",[l("p",[l("strong",[t._v("LSP (Liskov Substitution Principle)")]),l("br"),t._v("\n派生型はその基底型と置換可能でなければならない")])]),t._v(" "),l("p",[t._v("子クラスは親クラスの性質を引き継がなければいけません。例えば子クラスで以下のような実装を行ってはいけません。")]),t._v(" "),l("ul",[l("li",[t._v("親クラスで定義しているフィールドを使用していない")]),t._v(" "),l("li",[t._v("親クラスのメソッドを全く別の処理に書き換えている")])]),t._v(" "),l("p",[t._v("LSPに違反したクラスが存在すると、そのクラスを利用する側で以下のような問題が発生します。")]),t._v(" "),l("ul",[l("li",[t._v("どの子クラスを使うか気にしなければいけない")]),t._v(" "),l("li",[t._v("子クラスの実装を知らなければいけない")]),t._v(" "),l("li",[t._v("その子クラスに強く結合する\n"),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/architecture/OCP.html"}},[t._v("OCP (Open-Closed Principle)")]),t._v("にも同時に違反する")],1)])])]),t._v(" "),l("div",{staticClass:"custom-block tip"},[l("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),l("p",[l("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"✏️",src:"https://twemoji.maxcdn.com/2/svg/270f.svg"}}),t._v(" "),l("strong",[t._v("子クラスは親クラスの性質を引き継ぐ")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);