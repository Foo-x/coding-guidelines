(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{328:function(t,s,e){"use strict";e.r(s);var a=e(17),v=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"プリミティブ型執着"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#プリミティブ型執着"}},[t._v("#")]),t._v(" プリミティブ型執着")]),t._v(" "),s("p",[t._v("特定の概念を表す値には適切な型を指定しましょう。どんな値にもプリミティブ型を指定することを "),s("strong",[t._v("プリミティブ型執着")]),t._v(" と呼びます。プリミティブ型執着は避けましょう。")]),t._v(" "),s("p",[t._v("たとえば秒を表す値を "),s("code",[t._v("number")]),t._v(" 型とすると、ミリ秒や分の値として処理されても気付けない可能性があります。"),s("code",[t._v("Second")]),t._v(" 型を定義して指定することで混同を防げます。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[s("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"✏️",src:"https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/270f.svg"}}),t._v(" "),s("strong",[t._v("特定の概念を表す値には適切な型を指定する")])])]),t._v(" "),s("h2",{attrs:{id:"補足"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#補足"}},[t._v("#")]),t._v(" 補足")]),t._v(" "),s("p",[t._v("TypeScriptの型は構造が同じであれば同じ型として扱われます。このような型を "),s("strong",[t._v("構造的部分型")]),t._v(" と呼びます。したがって、単に "),s("code",[t._v("type Second = number;")]),t._v(" と定義した型を指定するだけでは異なる概念を表す値の混同を防げません。"),s("strong",[t._v("Type Branding")]),t._v(" というテクニックで回避できますが、特定の言語に限定されるためここでは触れません。")])])}),[],!1,null,null,null);s.default=v.exports}}]);