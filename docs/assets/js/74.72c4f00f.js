(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{355:function(t,s,l){"use strict";l.r(s);var v=l(14),i=Object(v.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"テストファースト"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#テストファースト"}},[t._v("#")]),t._v(" テストファースト")]),t._v(" "),s("p",[t._v("ロジックを実装するより前に、満たすべき仕様のテストを書きましょう。この時点では当然テストが失敗しますが、テストが通る実装をその後に書きます。この方法を"),s("strong",[t._v("テストファースト")]),t._v("と呼びます。メリットは以下です。")]),t._v(" "),s("ul",[s("li",[t._v("入出力のみに依存したテストにできる\n"),s("ul",[s("li",[t._v("実装に依存したテストがあると、リファクタリングのたびに追従する必要があり、本末転倒です")])])]),t._v(" "),s("li",[t._v("テストを繰り返し実行して、仕様を満たしているか確認しながら段階的に実装できる")]),t._v(" "),s("li",[t._v("失敗しないテスト（偽陰性）を防げる\n"),s("ul",[s("li",[t._v("テストが失敗することを確認しないと、条件を満たさないときでも成功するテストを作成してしまう可能性があります\n"),s("ul",[s("li",[t._v("アサートが含まれていない、アサートしている値が異なる、など")])])]),t._v(" "),s("li",[t._v("先に実装を書いてテストが成功した場合、テストが間違っていて常に成功してしまうのか、実装が正しいのかが区別できません\n"),s("ul",[s("li",[t._v("誤った条件でのテストが失敗することを確認すれば防げますが、忘れがちです")])])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[s("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"✏️",src:"https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/270f.svg"}}),t._v(" "),s("strong",[t._v("テストを書いてから実装する")])])])])}),[],!1,null,null,null);s.default=i.exports}}]);