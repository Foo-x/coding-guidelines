(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{189:function(t,s,e){"use strict";e.r(s);var i=e(0),n=Object(i.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"インターフェース分離の原則"}},[t._v("インターフェース分離の原則")]),t._v(" "),t._m(0),t._v(" "),e("p",[t._v("あるインターフェースを作成するときは利用者ごとにインターフェースを分離しましょう。複数の利用者が同じインターフェースに依存してしまうと、インターフェースを修正したときの影響範囲が広くなってしまいます。")]),t._v(" "),t._m(1),t._v(" "),e("h2",{attrs:{id:"関連"}},[t._v("関連")]),t._v(" "),e("h3",{attrs:{id:"単一責任原則"}},[e("router-link",{attrs:{to:"./SRP.html"}},[t._v("単一責任原則")])],1),t._v(" "),e("p",[t._v("修正に対する影響範囲を狭くするという目的も、利用者ごとに分離するという手段も同じです。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("ISP (Interface Segregation Principle)")]),s("br"),this._v("\nクライアントに、クライアントが利用しないメソッドへの依存を強制させてはいけない")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("NOTE")]),this._v(" "),s("p",[s("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"✏️",src:"https://twemoji.maxcdn.com/2/svg/270f.svg"}}),this._v(" "),s("strong",[this._v("インターフェースは利用者ごとに分離する")])])])}],!1,null,null,null);n.options.__file="ISP.md";s.default=n.exports}}]);